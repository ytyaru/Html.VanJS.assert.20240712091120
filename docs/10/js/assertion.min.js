!function(){class t extends Error{constructor(t,e,s){super(t,{cause:s,cause:s}),this.name="AssertError",this.cause=s,this.status=e}}class e extends Error{constructor(t,e,s){super(t,{cause:s,cause:s}),this.name="TestError",this.cause=s,this.status=e}}class s{constructor(t){this._M=t,this._asyncs=[]}_console(t,e,s,n){let i=void 0===s||this.__isFn(s)?this._captureStacks(this._console):this._getErrorStacks(s);["exception","fail"].some(e=>e===t)?console.log(`%c${e}
${i.join("\n")}`,`background-color:${this._M.stt[t].color.b};color:${this._M.stt[t].color.f};`):console.log(`${e}
${i.join("\n")}`)}_captureStacks(t){if(!Error.captureStackTrace)return[];{Error.captureStackTrace(this,t??this._captureStacks);let e=this.stack.split("\n");return e.shift(),this.__delStacks(e)}}_getErrorStacks(t){let e=this._recursionCause([t]);return e.map(t=>this.__delStacks(t.stack)).flat()}_recursionCause(t){let e=t[t.length-1];return e.hasOwnProperty("cause")&&e.cause?(t.push(e.cause),this._recursionCause(t)):t}__isBool(t){return"boolean"==typeof t}__isFn(t){return"function"==typeof t}__isStr(t){return"string"==typeof t||t instanceof String}__isAsyncFunction(t){return t instanceof(async()=>{}).constructor}__isNullOrUndefined(t){return null==t}__isGenealogy(t,e){return t instanceof e||t.constructor.name===e.constructor.name||!!t.prototype&&this.__isGenealogy(t.prototype,e)}__getCaller(t){let e=Error(),s=e.stack||"",n=s.split("\n"),i=n.findIndex(t=>t.includes("__getCaller"));return t||(t="assertion.min.js:"),n[i]?this.__delStacks(n.slice(i)).join("\n"):"Unknown"}__delStacks(e){let s=Array.isArray(e)?e:this.__isStr(e)?e.split("\n"):null;if(null===s)throw new t(`内部エラー。__delStacksの引数は文字列かその配列であるべきです。`,"exception");return s.filter(t=>-1===t.indexOf("assertion.min.js:"))}}class n extends s{constructor(t,e,s){super(t),this._caller=this.assert,this._count=e,this._isFalseSuccess=s,this._asyncs=[]}get count(){return this._count}assert(t){this.__isAsyncFunction(t)?(this._count.pending++,this._asyncs.push([t,this.__getCaller()])):this.__isFn(t)?this._nFn(t):this.__isBool(t)?this._nB(t):(this._count.exception++,this._console("fail",this._M.msg.normal.exception.return,this._caller))}_getAsyncPromises(){let e=[];for(let s=0;s<this._asyncs.length;s++)e.push(new Promise((e,n)=>{let i=this._asyncs[s][0],r=this._asyncs[s][1];i().then(t=>{this.__nCheckAsync(e,n,r,t)}).catch(e=>{this._count.exception++,n(new t(this._M.msg.normal.exception.throw(this._M.cmn.return[this._isFalseSuccess?"false":"true"])+"\n"+r,"exception"))})}));return e}_nFn(t){try{let e=t();this.__nCheck(e)}catch(s){this.__exceptMsg(s)}}_nB(t){(this._isFalseSuccess?t:!t)?(this._count.fail++,this._console("fail",this.__failMsg(),this._caller)):this._count.success++}__nCheckAsync(e,s,n,i){this.__isBool(i)?(this._isFalseSuccess?i:!i)?(this._count.fail++,s(new t(this.__failMsg()+"\n"+n,"fail"))):(this._count.success++,e(this._isFalseSuccess===i)):(this._count.exception++,s(new t(this._M.msg.normal.exception.fnReturn+"\n"+n,"exception")))}__nCheck(t){return this.__isBool(t)?(this._isFalseSuccess?t:!t)?(this._count.fail++,this._console("fail",this.__failMsg(),this._caller)):(this._count.success++,!0):(this._count.exception++,this._console("fail",this._M.msg.normal.exception.fnReturn,this._caller))}__failMsg(){let t=[...Object.values(this._M.cmn.return)];return this._isFalseSuccess&&t.reverse(),this._M.msg.normal.fail.value(...t)}__exceptMsg(t){this._count.exception++,this._console("exception",this._M.msg.normal.exception.throw(this._M.cmn.return[this._isFalseSuccess?"false":"true"]),t,this._caller)}}window.Assertion=class e{constructor(e){this._count={pending:0,exception:0,fail:0,success:0},this._M=new class t{constructor(t){this._common={ja:{return:{true:"真",false:"偽"},result:{pending:"保留",exception:"例外",fail:"失敗",success:"成功",details:{zero:`テストを書いてください。<pre><code>const a = new Assertion()
a.t(true)
a.f(false)
a.e(Error, 'M', ()=>{throw new Error('M')}
a.fin()</code></pre>`,notSuccess:"詳細はコンソールをご確認ください。コンソールはブラウザの開発者ツールにあります。"}}},en:{return:{true:"true",false:"false"},result:{pending:"pending",exception:"exception",fail:"fail",success:"success",details:{zero:`テストを書いてください。<pre><code>const a = new Assertion()
a.t(true)
a.f(false)
a.e(Error, 'M', ()=>{throw new Error('M')}
a.fin()</code></pre>`,notSuccess:"Please check the console for details. The console is located in your browser's developer tools."}}}},this._message={ja:{normal:{exception:{return:"テスト例外。引数は真偽値かそれを返す関数であるべきです。",fnReturn:"テスト例外。テストコードは最後に真偽値を返してください。",throw:t=>`テスト例外。${t}であるべき所で例外発生しました。`},fail:{value:(t,e)=>`テスト失敗。${t}であるべき所が${e}です。`,exception:t=>`テスト失敗。${t}であるべき所で例外発生しました。`}},exception:{augument:{summary:t=>`テスト例外。引数不正です。${2<=t?"\n":""}`,triple:`引数は次の3つ必要です:
1. 期待する例外型
2. 期待する例外メッセージ(String/RegExp)
3. 例外発生する無名関数`,first:`第一引数は期待する例外型でありErrorかそれを継承した型であるべきです。`,second:`第二引数は期待する例外メッセージを示す文字列型Stringか正規表現RegExp型であるべきです。`,third:`第三引数は例外を発生させる関数であるべきです。`},runtime:{fnReturn:"テスト例外。テストコードは例外発生させてください。例外発生しない上にPromiseを返すのは間違いです。あるいはテストコードを非同期関数async()=>{await Promise; return Boolean;}の形にしてください。",summary:t=>`テスト失敗: ${2<=t?"\n":""}`,type:(t,e)=>`型が違います。
期待値: ${t}
実際値: ${e}`,msg:(t,e)=>`メッセージが違います。
期待値: ${t}
実際値: ${e}`,noneException:`テスト失敗。例外発生すべき所で例外発生せず正常終了しました。`}},fin:{exception:{one:`非同期テストで例外発生しました。`,all:`非同期テスト一括実行で例外発生しました。`},result:{sync:`同期テスト結果`,async:`非同期テスト結果`}}},en:{normal:{exception:{return:"Test exception. The argument should be a boolean value or a function that returns one.",fnReturn:"Test exception. Please return a boolean value at the end of your test code.",throw:t=>`Test exception. An exception occurred where ${t} should be.`},fail:{value:(t,e)=>`Test failed. Where ${t} should be, it is ${e}.`,exception:t=>`Test failed. An exception occurred where ${t} should be.`}},exception:{augument:{summary:t=>`Test exception. Invalid argument.${2<=t?"\n":""}`,triple:`The following three arguments are required:
1. Expected exception type
2. Expected exception message (String/RegExp)
3. Anonymous function that raises the exception.`,first:"The first argument is the expected exception type, which should be Error or a type that inherits from it.",second:"The second argument should be a string type String or regular expression RegExp type indicating the expected exception message.",third:"The third argument should be the function that raises the exception."},runtime:{summary:t=>`Test failed: ${2<=t?"\n":""}`,type:(t,e)=>`Type is different.
Expected: ${t}
Actual: ${e}`,msg:(t,e)=>`Message is different.
Expected: ${t}
Actual: ${e}`,noneException:"Test failed. The program completed normally without generating an exception where it should have occurred."}},fin:{exception:{one:"An exception occurred during an asynchronous test.",all:"An exception occurred during asynchronous test batch execution."},result:{sync:"Synchronization test results",async:"Asynchronous test results"}}}},this._status={ja:{pending:{label:"保留",details:"非同期テストコード実行待ち"},exception:{label:"例外",details:"テストコード実行時例外"},fail:{label:"失敗",details:"テストコード期待値不一致"},success:{label:"成功",details:"テストコード期待値一致"}},en:{pending:{label:"pending",details:"Waiting for asynchronous test code execution"},exception:{label:"exception",details:"Exception when running test code"},fail:{label:"fail",details:"Test code expectation value mismatch"},success:{label:"success",details:"Test code expected value matching"}}},this.#a(t),this._statusCss={pending:{color:{f:"#666666",b:"#CCCCCC"},...this._status[this._lang].pending},exception:{color:{f:"#0000AA",b:"#99CCFF"},...this._status[this._lang].exception},fail:{color:{f:"#AA0000",b:"#FFABCE"},...this._status[this._lang].fail},success:{color:{f:"#008800",b:"#AEFFBD"},...this._status[this._lang].success}}}get msg(){return this._message[this._message.hasOwnProperty(this._lang)?this._lang:"ja"]}get cmn(){return this._common[this._message.hasOwnProperty(this._lang)?this._lang:"ja"]}get stt(){return this._statusCss}#a(e){if(this.#b(e))this._lang=e;else{let s=this.#c;this.#b(s)?this._lang=s:this._lang="en"}}get #d(){return this.has(this._lang)?this._lang:"en"}#b(n){return[...Object.keys(this._common)].includes(n)&&[...Object.keys(this._message)].includes(n)}get #c(){return window.navigator.languages&&window.navigator.languages[0]||window.navigator.language||window.navigator.userLanguage||window.navigator.browserLanguage}}(e),this._t=new class t extends n{constructor(t,e){super(t,e,!1)}}(this._M,this._count),this._f=new class t extends n{constructor(t,e){super(t,e,!0)}}(this._M,this._count),this._e=new class e extends s{constructor(t,e){super(t),this._count=e}assert(t,e,s){if(!this._ePrmErr(t,e,s))return this._error(t,e,s)}get count(){return this._count}_ePrmErr(t,e,s){let n=[];if([t,e,s].some(t=>this.__isNullOrUndefined(t))&&n.push(this._M.msg.exception.augument.triple),this.__isGenealogy(t,Error)||n.push(this._M.msg.exception.augument.first),this.__isStr(e)||n.push(this._M.msg.exception.augument.second),this.__isAsyncFunction(s)||"function"==typeof s||n.push(this._M.msg.exception.augument.third),0<n.length)return this._console("fail",this._M.msg.exception.augument.summary(n.length)+n.join("\n"),this.e),!0}_error(t,e,s){this.__isAsyncFunction(s)?(this._count.pending++,this._asyncs.push([t,e,s,this.__getCaller()])):this.__isFn(s)&&this._eFn(t,e,s)}_getAsyncPromises(){let e=[];for(let s=0;s<this._asyncs.length;s++)e.push(new Promise((e,n)=>{let[i,r,c,o]=this._asyncs[s];c().then(e=>{this._count.fail++,n(new t(this.__errorMsg()+"\n"+o,"fail"))}).catch(s=>{let c=this.__eCheckMsgs(i,r,s);0===c.length?(this._count.success++,e(!0)):(this._count.fail++,n(new t(`${this._M.msg.exception.runtime.summary(c.length)}`+c.join("\n")+o,"fail")))})}));return e}_eAsync(t,e,s){s().then(t=>{this._console("fail",this.__errorMsg(),this.e)}).catch(s=>{this.__eCheck(t,e,s)})}_eFn(t,e,s){try{let n=s();return n instanceof Promise?(this._count.exception++,this._console("exception",this._M.msg.exception.runtime.fnReturn,this.e)):(this._count.fail++,this._console("fail",this.__errorMsg(),this.e)),!1}catch(i){let r=this.__eCheckMsgs(t,e,i);if(0===r.length)return this._count.success++,!0;this._count.fail++,this._console("fail",`${this._M.msg.exception.runtime.summary(r.length)}`+r.join("\n"),i,this.e)}}__eCheck(t,e,s,n){let i=[this.__eCheckTypeMsg(t,s),this.__eCheckMsgMsg(e,s)].filter(t=>t);return 0<i.length?(this._console("exception",`${this._M.msg.exception.runtime.summary(i.length)}${i.join("\n")}
${n}`,s,this.e),this._count.fail++,!1):(this._count.success++,!0)}__eCheckMsgs(t,e,s){return[this.__eCheckTypeMsg(t,s),this.__eCheckMsgMsg(e,s)].filter(t=>t)}__eCheckTypeMsg(t,e){return e.constructor.name===t.name?"":this._M.msg.exception.runtime.type(t.name,e.constructor.name)}__eCheckMsgMsg(t,e){return t instanceof RegExp?t.test(t)?"":this._M.msg.exception.runtime.msg(t,e.message):"string"==typeof t||t instanceof String?t===e.message?"":this._M.msg.exception.runtime.msg(t,e.message):void 0}__errorMsg(){return this._M.msg.exception.runtime.noneException}}(this._M,this._count),this._T=new class t{constructor(t,e){this._M=t,this._C=e,this._id="assert-result-table"}addDom(){!document.querySelector(`#${this._id}`)&&(document.body.append(this._makeTable(),this._makeDetails()),this._addCss(),this.update())}update(){document.querySelector(`#${this._id}`)||this.addDom(),[...Object.entries(this._C)].forEach(([t,e])=>{let s=document.querySelector(`#${t}-tr`);s.style.display=0===e?"none":"table-row",document.querySelector(`#${t}-count`).textContent=e}),this._updateDetails()}_updateDetails(){let t=document.querySelector(`#${this._id}-details`);if([...Object.values(this._C)].every(t=>0===t)){t.innerHTML=this._M.cmn.result.details.zero;return}t.textContent=0<[...Object.entries(this._C)].filter(([t,e])=>"success"!==t&&0<e).length?this._M.cmn.result.details.notSuccess:""}_makeTable(){let t=document.createElement("table");return t.id=this._id,t.append(...[...Object.entries(this._C)].map(([t,e])=>this._makeTr(t,e))),t}_makeTr(t,e){let s=document.createElement("tr"),n=document.createElement("th"),i=document.createElement("td");return s.id=`${t}-tr`,n.textContent=this._M.cmn.result[t],i.textContent=e,i.id=`${t}-count`,s.append(n,i),s}_addCss(){let t=this._id+"-css";if(document.querySelector(`#${t}`))return;let e=document.createElement("style");e.id=t,e.textContent=`
#${this._id} { border-collapse: collapse; }
#${this._id} #pending-tr { background-color:#CCCCCC; }
#${this._id} #exception-tr { background-color:#99CCFF; }
#${this._id} #fail-tr { background-color:#FFABCE; }
#${this._id} #success-tr { background-color:#AEFFBD; }
#${this._id} td:nth-child(2) { text-align: right; }
#${this._id} #pending-tr th { color:#666666; }
#${this._id} #exception-tr th { color:#0000AA; }
#${this._id} #fail-tr th { color:#AA0000; }
#${this._id} #success-tr th { color:#008800; }
#${this._id} td, #${this._id} th { padding: 0.5em;}
`,document.body.appendChild(e)}_makeDetails(){let t=document.createElement("p");return t.id=this._id+"-details",t.textContent=this._M.cmn.result.details.zero,t}}(this._M,this._count),this._T.addDom()}t(t){this._t.assert(t)}f(t){this._f.assert(t)}e(t,e,s){this._e.assert(t,e,s)}get count(){return this._count}fin(t,e){this._runOnFinished(e,this._M.msg.fin.result.sync),0<this.count.pending&&Promise.allSettled([...this._t._getAsyncPromises(),...this._f._getAsyncPromises(),...this._e._getAsyncPromises(),]).then(t=>{for(let e of t)e.status,"rejected"===e.status&&this._t._console(e.reason.status,this._M.msg.fin.exception.one,e.reason,this.fin);this._count.pending-=t.length}).catch(t=>this._t._console("exception",this._M.msg.fin.exception.all,t,this.fin)).finally(()=>{this._runOnFinished(t,this._M.msg.fin.result.async),this._T.update()}),this._T.update()}_runOnFinished(t,e){("function"==typeof t?t:t=>console.log(e,t))(this.count)}}}();
